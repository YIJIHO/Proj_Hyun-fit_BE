<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.backend.hyunfit.domain.mbr.mapper.MemberMapper">

    <select id="selectOneMemberById" parameterType="String" resultType="MemberDTO">
        SELECT mbr_id,
               mbr_pw,
               mbr_seq,
               mbr_name,
               mbr_total_point,
               mbr_total_exp,
               mbr_birthdate,
               mbr_gender,
               mbr_height,
               mbr_weight,
               mbr_exercise_goal,
               mbr_exercise_experience_level,
               mbr_exercise_target,
               mbr_knee_health_considered,
               mbr_noise_considered,
               mbr_long_sitter,
               mbr_neck_shoulder_focused,
               mbr_back_disk_considered
        FROM member
        WHERE mbr_id = #{mbrId}
    </select>

    <select id="selectOneMemberBySeq" parameterType="_long" resultType="MemberDTO">
        SELECT mbr_id,
               mbr_pw,
               mbr_name,
               mbr_total_point,
               mbr_total_exp,
               mbr_birthdate,
               mbr_gender,
               mbr_height,
               mbr_weight,
               mbr_exercise_goal,
               mbr_exercise_experience_level,
               mbr_exercise_target,
               mbr_knee_health_considered,
               mbr_noise_considered,
               mbr_long_sitter,
               mbr_neck_shoulder_focused,
                mbr_back_disk_considered
        FROM member
        WHERE mbr_seq = #{mbrSeq}
    </select>

    <update id="updateOneMemberById" parameterType="MemberDTO">
        UPDATE MEMBER
        <set>
            <if test="mbrName != null">mbr_name = #{mbrName},</if>
            <if test="mbrTotalPoint != null">mbr_total_point = #{mbrTotalPoint},</if>
            <if test="mbrTotalExp != null">mbr_total_exp = #{mbrTotalExp},</if>
            <if test="mbrBirthdate != null">mbr_birthdate = #{mbrBirthdate},</if>
            <if test="mbrHeight != null">mbr_height = #{mbrHeight},</if>
            <if test="mbrWeight != null">mbr_weight = #{mbrWeight},</if>
            <if test="mbrExerciseGoal != null">mbr_exercise_goal = #{mbrExerciseGoal},</if>
            <if test="mbrExerciseExperienceLevel != null">mbr_exercise_experience_level = #{mbrExerciseExperienceLevel},</if>
            <if test="mbrExerciseTarget != null">mbr_exercise_target = #{mbrExerciseTarget},</if>
            <if test="mbrKneeHealthConsidered != null">mbr_knee_health_considered = #{mbrKneeHealthConsidered},</if>
            <if test="mbrNoiseConsidered != null">mbr_noise_considered = #{mbrNoiseConsidered},</if>
            <if test="mbrLongSitter != null">mbr_long_sitter = #{mbrLongSitter},</if>
            <if test="mbrNeckShoulderFocused != null">mbr_neck_shoulder_focused = #{mbrNeckShoulderFocused},</if>
            <if test="mbrBackDiskConsidered != null">mbr_back_disk_considered = #{mbrBackDiskConsidered},</if>
        </set>
        WHERE mbr_id = #{mbrId}
    </update>

    <select id="selectAllMemberPtBySeq">
        SELECT PT_SEQ, tr.TRN_SEQ, MBR_SEQ, PT_RESERVATION_DATE,
               PT_COUNTS, PT_LESSON_DURATION, PT_LESSON_START_DATE, PT_LESSON_END_DATE,
               PT_RESERVATION_STATUS, PT_CANCELLATION_REASON, PT_NOTE_STICKERS,
               tr.TRN_NAME, tr.TRN_TYPE, TRN_TYPE_NAME, TRN_PROFILE_URL, TRN_SHORT_DESCRIPTION,PTR_RATING, PTR_CONTENT
        FROM (SELECT PERSONAL_TRAINING.PT_SEQ,
                     TRN_SEQ,
                     MBR_SEQ,
                     PT_CREATION_DATE,
                     PT_RESERVATION_DATE,
                     PT_LESSON_DURATION,
                     PT_LESSON_START_DATE,
                     PT_LESSON_END_DATE,
                     PT_RESERVATION_STATUS,
                     PT_CANCELLATION_REASON,
                     PT_NOTE_STICKERS,
                     ROW_NUMBER() OVER (PARTITION BY TRN_SEQ ORDER BY PT_RESERVATION_DATE ASC) AS PT_COUNTS,
                      PTR_RATING,
                     PTR_CONTENT
              FROM PERSONAL_TRAINING
                       LEFT JOIN FIREMEN.PERSONAL_TRAINING_REVIEW
                                 ON PERSONAL_TRAINING.PT_SEQ = PERSONAL_TRAINING_REVIEW.PT_SEQ WHERE MBR_SEQ = #{mbrSeq}) re
                 JOIN (SELECT TRN_SEQ, TRN_NAME, TRN_TYPE, CODE_NAME AS TRN_TYPE_NAME, TRN_PROFILE_URL , TRN_SHORT_DESCRIPTION FROM TRAINER t
                                                                                                                                        JOIN (SELECT * FROM COMMON_CODE WHERE CATEGORY = 'TRAINER_TYPE') a
                                                                                                                                             ON t.TRN_TYPE = a.CODE_NUMBER) tr
                      ON re.TRN_SEQ = tr.TRN_SEQ
        ORDER BY PT_RESERVATION_DATE DESC -- 결과를 어떤 기준으로 정렬할지 지정
--         OFFSET 5 ROWS FETCH NEXT 8 ROWS ONLY
    </select>
</mapper>